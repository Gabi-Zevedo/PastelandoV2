// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SistemaPastelando.DAL;

namespace SistemaPastelando.DAL.Migrations
{
    [DbContext(typeof(Context))]
    [Migration("20220323165616_BancoPopulado")]
    partial class BancoPopulado
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.15")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens");
                });

            modelBuilder.Entity("SistemaPastelando.BLL.Models.Bebida", b =>
                {
                    b.Property<int>("BebidaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<double>("Valor")
                        .HasColumnType("float");

                    b.HasKey("BebidaId");

                    b.ToTable("Bebidas");

                    b.HasData(
                        new
                        {
                            BebidaId = 1,
                            Nome = "Coca-cola 2L",
                            Valor = 9.5
                        },
                        new
                        {
                            BebidaId = 2,
                            Nome = "Coca-cola 350ml",
                            Valor = 4.5
                        },
                        new
                        {
                            BebidaId = 3,
                            Nome = "Coca-cola 600ml",
                            Valor = 6.5
                        },
                        new
                        {
                            BebidaId = 4,
                            Nome = "Guaravita",
                            Valor = 2.5
                        },
                        new
                        {
                            BebidaId = 5,
                            Nome = "Guaraná 2L",
                            Valor = 8.5
                        },
                        new
                        {
                            BebidaId = 6,
                            Nome = "Guaraná 350L",
                            Valor = 4.5
                        });
                });

            modelBuilder.Entity("SistemaPastelando.BLL.Models.Complemento", b =>
                {
                    b.Property<int>("ComplementoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<double>("Valor")
                        .HasColumnType("float");

                    b.Property<double>("ValorAdicional")
                        .HasColumnType("float");

                    b.HasKey("ComplementoId");

                    b.ToTable("Complementos");

                    b.HasData(
                        new
                        {
                            ComplementoId = 1,
                            Nome = "Cebola",
                            Valor = 0.0,
                            ValorAdicional = 3.0
                        },
                        new
                        {
                            ComplementoId = 2,
                            Nome = "Tomate",
                            Valor = 0.0,
                            ValorAdicional = 3.0
                        },
                        new
                        {
                            ComplementoId = 3,
                            Nome = "Cheddar",
                            Valor = 0.0,
                            ValorAdicional = 3.0
                        },
                        new
                        {
                            ComplementoId = 4,
                            Nome = "Catupiry",
                            Valor = 0.0,
                            ValorAdicional = 3.0
                        },
                        new
                        {
                            ComplementoId = 5,
                            Nome = "Cream Cheese",
                            Valor = 2.0,
                            ValorAdicional = 3.0
                        },
                        new
                        {
                            ComplementoId = 6,
                            Nome = "Azeitona",
                            Valor = 0.0,
                            ValorAdicional = 3.0
                        });
                });

            modelBuilder.Entity("SistemaPastelando.BLL.Models.Massa", b =>
                {
                    b.Property<int>("MassaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<double>("Valor")
                        .HasColumnType("float");

                    b.HasKey("MassaId");

                    b.ToTable("Massas");

                    b.HasData(
                        new
                        {
                            MassaId = 1,
                            Nome = "Original",
                            Valor = 14.0
                        },
                        new
                        {
                            MassaId = 2,
                            Nome = "Pimenta",
                            Valor = 4.5
                        },
                        new
                        {
                            MassaId = 3,
                            Nome = "Cacau",
                            Valor = 6.5
                        });
                });

            modelBuilder.Entity("SistemaPastelando.BLL.Models.OutroItem", b =>
                {
                    b.Property<int>("OutroItemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<double>("Valor")
                        .HasColumnType("float");

                    b.HasKey("OutroItemId");

                    b.ToTable("OutrosItens");

                    b.HasData(
                        new
                        {
                            OutroItemId = 1,
                            Nome = "Pastel de Vento",
                            Valor = 6.0
                        });
                });

            modelBuilder.Entity("SistemaPastelando.BLL.Models.Recheio", b =>
                {
                    b.Property<int>("RecheioId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<double>("Valor")
                        .HasColumnType("float");

                    b.Property<double>("ValorAdicional")
                        .HasColumnType("float");

                    b.HasKey("RecheioId");

                    b.ToTable("Recheios");

                    b.HasData(
                        new
                        {
                            RecheioId = 1,
                            Nome = "Mussarela",
                            Valor = 0.0,
                            ValorAdicional = 3.0
                        },
                        new
                        {
                            RecheioId = 2,
                            Nome = "Minas",
                            Valor = 0.0,
                            ValorAdicional = 3.0
                        },
                        new
                        {
                            RecheioId = 3,
                            Nome = "Presunto",
                            Valor = 0.0,
                            ValorAdicional = 3.0
                        },
                        new
                        {
                            RecheioId = 4,
                            Nome = "Calabresa",
                            Valor = 0.0,
                            ValorAdicional = 3.0
                        },
                        new
                        {
                            RecheioId = 5,
                            Nome = "Carne",
                            Valor = 2.0,
                            ValorAdicional = 3.0
                        },
                        new
                        {
                            RecheioId = 6,
                            Nome = "Frango",
                            Valor = 0.0,
                            ValorAdicional = 3.0
                        });
                });

            modelBuilder.Entity("SistemaPastelando.BLL.Models.Role", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles");
                });

            modelBuilder.Entity("SistemaPastelando.BLL.Models.Sobremesa", b =>
                {
                    b.Property<int>("SobremesaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<double>("Valor")
                        .HasColumnType("float");

                    b.HasKey("SobremesaId");

                    b.ToTable("Sobremesas");

                    b.HasData(
                        new
                        {
                            SobremesaId = 1,
                            Nome = "Pastel Banana c/ açucar",
                            Valor = 8.0
                        },
                        new
                        {
                            SobremesaId = 2,
                            Nome = "Pastel Romeu e Julieta",
                            Valor = 8.0
                        },
                        new
                        {
                            SobremesaId = 3,
                            Nome = "Pastel de Churros",
                            Valor = 8.0
                        },
                        new
                        {
                            SobremesaId = 4,
                            Nome = "Pastel Banana c/ Nutela",
                            Valor = 8.0
                        },
                        new
                        {
                            SobremesaId = 5,
                            Nome = "Pastel de Ovomaltine",
                            Valor = 8.0
                        },
                        new
                        {
                            SobremesaId = 6,
                            Nome = "Pastel Mineirin",
                            Valor = 8.0
                        });
                });

            modelBuilder.Entity("SistemaPastelando.BLL.Models.User", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("SistemaPastelando.BLL.Models.Role", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("SistemaPastelando.BLL.Models.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("SistemaPastelando.BLL.Models.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("SistemaPastelando.BLL.Models.Role", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SistemaPastelando.BLL.Models.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("SistemaPastelando.BLL.Models.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
